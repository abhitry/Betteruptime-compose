apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "upguard.fullname" . }}-api
  labels:
    {{- include "upguard.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "upguard.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "upguard.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:15
          command:
            - sh
            - -c
            - |
              until pg_isready -h {{ include "upguard.fullname" . }}-postgresql -p 5432 -U {{ .Values.postgresql.auth.username }}; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h {{ include "upguard.fullname" . }}-redis-master ping; do
                echo "Waiting for Redis..."
                sleep 2
              done
      containers:
        - name: api
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "upguard.fullname" . }}-config
          env:
            - name: POSTGRES_HOST
              value: {{ include "upguard.fullname" . }}-postgresql
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
          {{- if .Values.api.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.api.healthCheck.path }}
              port: http
            initialDelaySeconds: {{ .Values.api.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.api.healthCheck.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.api.healthCheck.path }}
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}